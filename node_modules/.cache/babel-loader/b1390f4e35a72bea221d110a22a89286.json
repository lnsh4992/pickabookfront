{"ast":null,"code":"import _classCallCheck from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/logesh/cs307/PickaBook/frontend/gui/src/containers/NotificationMenu.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Dropdown, Icon, Button, Badge } from \"antd\";\nimport { connect } from \"react-redux\";\nimport NotificationList from '../containers/NotificationList';\nvar gridStyle = {\n  textAlign: 'center'\n};\n\nvar NotificationMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NotificationMenu, _React$Component);\n\n  function NotificationMenu(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NotificationMenu).call(this, props));\n    _this.state = {\n      notifications: []\n    };\n    return _this;\n  }\n\n  _createClass(NotificationMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var profID = localStorage.getItem(\"profID\");\n      axios.get(\"http://127.0.0.1:8000/notification/\".concat(profID)).then(function (res) {\n        _this2.setState({\n          notifications: res.data,\n          length: res.data.length\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        overlay: React.createElement(NotificationList, {\n          data: this.state.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }),\n        trigger: ['click'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        count: this.state.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"bell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return NotificationMenu;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userid: state.userId\n  };\n};\n\nexport default NotificationMenu;","map":{"version":3,"sources":["/home/logesh/cs307/PickaBook/frontend/gui/src/containers/NotificationMenu.js"],"names":["React","axios","Dropdown","Icon","Button","Badge","connect","NotificationList","gridStyle","textAlign","NotificationMenu","props","state","notifications","profID","localStorage","getItem","get","then","res","setState","data","length","catch","err","console","log","Component","mapStateToProps","userid","userId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,MAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE;AADG,CAAlB;;IAIMC,gB;;;;;AAEF,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,0FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AADN,KAAb;AAFe;AAKlB;;;;wCAEmB;AAAA;;AAChB,UAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACAf,MAAAA,KAAK,CAACgB,GAAN,8CAAgDH,MAAhD,GAA0DI,IAA1D,CAA+D,UAAAC,GAAG,EAAI;AAClE,QAAA,MAAI,CAACC,QAAL,CAAc;AACVP,UAAAA,aAAa,EAAEM,GAAG,CAACE,IADT;AAEVC,UAAAA,MAAM,EAAEH,GAAG,CAACE,IAAJ,CAASC;AAFP,SAAd;AAKH,OAND,EAOCC,KAPD,CAOO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAPV;AAQH;;;6BAEQ;AACL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,OAAO,EACb,oBAAC,gBAAD;AAAkB,UAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWU,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAEE,QAAA,OAAO,EAAE,CAAC,OAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWU,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CAHJ,CADJ,CADA;AAeH;;;;EArC0BtB,KAAK,CAAC2B,S;;AAwCrC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAhB,KAAK,EAAI;AAC7B,SAAO;AACHiB,IAAAA,MAAM,EAAEjB,KAAK,CAACkB;AADX,GAAP;AAGH,CAJD;;AAMA,eAAepB,gBAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Dropdown, Icon, Button, Badge } from \"antd\";\nimport { connect } from \"react-redux\";\nimport NotificationList from '../containers/NotificationList';\n\nconst gridStyle = {\n    textAlign: 'center',\n  };\n\nclass NotificationMenu extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            notifications: []\n        };\n    }  \n\n    componentDidMount() {\n        const profID = localStorage.getItem(\"profID\");\n        axios.get(`http://127.0.0.1:8000/notification/${profID}`).then(res => {\n            this.setState({\n                notifications: res.data,\n                length: res.data.length\n            });\n            \n        })\n        .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n        <div>\n            <Dropdown overlay={\n                <NotificationList data={this.state.length} />\n            } trigger={['click']}>\n                <Badge count={this.state.length}>\n                    <div>\n                        <Button>\n                            <Icon type=\"bell\" />\n                        </Button>\n                    </div>\n                </Badge>\n            </Dropdown>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        userid: state.userId\n    };\n};\n\nexport default NotificationMenu;"]},"metadata":{},"sourceType":"module"}