{"ast":null,"code":"import _classCallCheck from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/logesh/cs307/PickaBook/frontend/gui/src/containers/Signup.js\";\nimport React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../images/logo.png';\nvar prefixIcon = {\n  color: 'rgba(0,0,0,0.8)'\n};\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          _this.props.onAuth(values.userName, values.email, values.password, values.confirm);\n\n          setTimeout(function () {\n            this.props.history.push('/newprof/');\n          }.bind(_assertThisInitialized(_assertThisInitialized(_this))), 5000);\n        } //        this.props.history.push('/');\n\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"parent\",\n        style: {\n          position: 'absolute',\n          left: '50%',\n          top: '50%',\n          transform: 'translate(-50%, -50%)',\n          borderRadius: 10,\n          backgroundColor: 'rgba(241, 101, 86, 0.6)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Logo,\n        alt: \"logo\",\n        style: {\n          width: 250,\n          height: 93\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        className: \"signForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: prefixIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        className: \"signForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"mail\",\n          style: prefixIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }),\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        className: \"signForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: prefixIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        className: \"signForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: prefixIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        className: \"signForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          marginRight: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Signup\"), React.createElement(NavLink, {\n        style: {\n          marginLeft: 110,\n          fontSize: 16\n        },\n        to: \"/login/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \" Login\"))));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nvar WrappedRegistrationForm = Form.create({\n  name: 'register'\n})(RegistrationForm);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(userName, email, password1, password2) {\n      return dispatch(actions.authSignup(userName, email, password1, password2));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);","map":{"version":3,"sources":["/home/logesh/cs307/PickaBook/frontend/gui/src/containers/Signup.js"],"names":["React","Form","Input","Icon","Button","actions","connect","NavLink","Logo","prefixIcon","color","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","onAuth","userName","email","password","confirm","setTimeout","history","push","bind","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","position","left","top","transform","borderRadius","backgroundColor","width","height","rules","required","message","type","validator","marginRight","marginLeft","fontSize","Component","WrappedRegistrationForm","create","name","mapStateToProps","loading","error","mapDispatchToProps","dispatch","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Form, Input, Icon, Button } from 'antd';\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../images/logo.png';\n  \nconst prefixIcon = {\n  color: 'rgba(0,0,0,0.8)'\n};\n\n  class RegistrationForm extends React.Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n  \n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          this.props.onAuth(\n              values.userName, \n              values.email,\n              values.password,\n              values.confirm\n            );\n\n            setTimeout(\n              function() {\n                this.props.history.push('/newprof/');\n              }\n              .bind(this),\n              5000\n            );\n        }\n//        this.props.history.push('/');\n      });\n    }\n  \n    handleConfirmBlur = (e) => {\n      const value = e.target.value;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    }\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    }\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    }\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n  \n      return (\n        <div className=\"parent\" style={{\n          position: 'absolute',\n          left: '50%',\n          top: '50%',\n          transform: 'translate(-50%, -50%)',\n          borderRadius: 10,\n          backgroundColor: 'rgba(241, 101, 86, 0.6)', \n          \n      }}>\n\n          <img src={Logo} alt=\"logo\" style={{\n            width: 250,\n            height: 93\n          }} />\n        <Form onSubmit={this.handleSubmit}>\n            <Form.Item className='signForm' >\n                {getFieldDecorator('userName', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n                })(\n                <Input prefix={<Icon type=\"user\" style={prefixIcon} />} placeholder=\"Username\" />\n                )}\n            </Form.Item>\n\n          <Form.Item className='signForm'  >\n            {getFieldDecorator('email', {\n              rules: [{\n                type: 'email', message: 'The input is not valid E-mail!',\n              }, {\n                required: true, message: 'Please input your E-mail!',\n              }],\n            })(\n              <Input prefix={<Icon type=\"mail\" style={prefixIcon} />} placeholder=\"Email\" />\n            )}\n          </Form.Item>\n          <Form.Item className='signForm' >\n            {getFieldDecorator('password', {\n              rules: [{\n                required: true, message: 'Please input your password!',\n              }, {\n                validator: this.validateToNextPassword,\n              }],\n            })(\n              <Input prefix={<Icon type=\"lock\" style={prefixIcon} />} type=\"password\" placeholder=\"Password\" />            )}\n          </Form.Item>\n        \n        <Form.Item className='signForm' >\n        {getFieldDecorator('confirm', {\n            rules: [{\n            required: true, message: 'Please confirm your password!',\n            }, {\n            validator: this.compareToFirstPassword,\n            }],\n        })(\n            <Input prefix={<Icon type=\"lock\" style={prefixIcon} />} type=\"password\" placeholder=\"Password\" onBlur={this.handleConfirmBlur} />\n        )}\n        </Form.Item>\n\n        <Form.Item className='signForm' >\n                <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}} >\n                    Signup\n                </Button>\n                <NavLink style={{marginLeft: 110, fontSize: 16}} to='/login/'> Login\n                </NavLink>\n        </Form.Item>\n\n       </Form>\n       \n       </div>\n      );\n    }\n  }\n  \n  const WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (userName, email, password1, password2) => dispatch(actions.authSignup(userName, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);"]},"metadata":{},"sourceType":"module"}