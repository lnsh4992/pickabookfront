{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nvar initialState = {\n  token: null,\n  username: null,\n  userId: null,\n  error: null,\n  loading: false\n};\n\nvar authStart = function authStart(state, action) {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nvar authSuccess = function authSuccess(state, action) {\n  return updateObject(state, {\n    token: action.user.token,\n    username: action.user.username,\n    userId: action.user.userId,\n    error: null,\n    loading: false\n  });\n};\n\nvar authFail = function authFail(state, action) {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nvar authLogout = function authLogout(state, action) {\n  return updateObject(state, {\n    token: null\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/logesh/cs307/PickaBook/frontend/gui/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","username","userId","error","loading","authStart","state","action","authSuccess","user","authFail","authLogout","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,QAAQ,EAAE,IAFO;AAGjBC,EAAAA,MAAM,EAAE,IAHS;AAIjBC,EAAAA,KAAK,EAAE,IAJU;AAKjBC,EAAAA,OAAO,EAAE;AALQ,CAArB;;AAQA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,SAAOT,YAAY,CAAEQ,KAAF,EAAS;AACxBH,IAAAA,KAAK,EAAE,IADiB;AAExBC,IAAAA,OAAO,EAAE;AAFe,GAAT,CAAnB;AAIH,CALD;;AAOA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACF,KAAD,EAAQC,MAAR,EAAmB;AACnC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACvBN,IAAAA,KAAK,EAAEO,MAAM,CAACE,IAAP,CAAYT,KADI;AAEvBC,IAAAA,QAAQ,EAAEM,MAAM,CAACE,IAAP,CAAYR,QAFC;AAGvBC,IAAAA,MAAM,EAAEK,MAAM,CAACE,IAAP,CAAYP,MAHG;AAIvBC,IAAAA,KAAK,EAAE,IAJgB;AAKvBC,IAAAA,OAAO,EAAE;AALc,GAAR,CAAnB;AAOH,CARD;;AAUA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD,EAAQC,MAAR,EAAmB;AAChC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACvBH,IAAAA,KAAK,EAAEI,MAAM,CAACJ,KADS;AAEvBC,IAAAA,OAAO,EAAE;AAFc,GAAR,CAAnB;AAIH,CALD;;AAOA,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACL,KAAD,EAAQC,MAAR,EAAmB;AAClC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACvBN,IAAAA,KAAK,EAAE;AADgB,GAAR,CAAnB;AAGH,CAJD;;AAMA,IAAMY,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCN,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAC9C,UAASA,MAAM,CAACM,IAAhB;AACI,SAAKhB,WAAW,CAACiB,UAAjB;AACI,aAAOT,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AACJ,SAAKV,WAAW,CAACkB,YAAjB;AACI,aAAOP,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AACJ,SAAKV,WAAW,CAACmB,SAAjB;AACI,aAAON,QAAQ,CAACJ,KAAD,EAAQC,MAAR,CAAf;;AACJ,SAAKV,WAAW,CAACoB,WAAjB;AACI,aAAON,UAAU,CAACL,KAAD,EAAQC,MAAR,CAAjB;;AACJ;AACI,aAAOD,KAAP;AAVR;AAYH,CAbD;;AAeA,eAAeM,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    token: null,\n    username: null,\n    userId: null,\n    error: null,\n    loading: false\n};\n\nconst authStart = (state, action) => {\n    return updateObject( state, {\n        error: null,\n        loading: true\n    });\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.user.token,\n        username: action.user.username,\n        userId: action.user.userId,\n        error: null,\n        loading: false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch ( action.type) {\n        case actionTypes.AUTH_START:\n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL:\n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT:\n            return authLogout(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}