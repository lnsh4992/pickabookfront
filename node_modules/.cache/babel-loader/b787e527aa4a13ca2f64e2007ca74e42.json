{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(user) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user: user\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport var authLogin = function authLogin(username, password) {\n  return function (dispatch) {\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n      username: username,\n      password: password\n    }).then(function (res) {\n      var user = {\n        token: res.data.key,\n        username: username,\n        userId: res.data.user,\n        expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch(authSuccess(user));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authSignup = function authSignup(username, email, password1, password2) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var user = {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    };\n    axios.post('http://127.0.0.1:8000/rest-auth/registration/', user).then(function (res) {\n      var user = {\n        token: res.data.key,\n        username: username,\n        userId: res.data.user,\n        expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch(authSuccess(user));\n      dispatch(checkAuthTimeout(3600)); //            axios.get('')\n    }).catch(function (err) {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (user === undefined || user === null) {\n      dispatch(logout());\n    } else {\n      var expirationDate = new Date(user.expirationDate);\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/logesh/cs307/pickabookfront/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","user","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","token","data","key","userId","expirationDate","Date","getTime","setItem","JSON","stringify","catch","err","authSignup","email","password1","password2","authCheckState","parse","getItem","undefined"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AAC/B,SAAO;AACHH,IAAAA,IAAI,EAAEF,WAAW,CAACM,YADf;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHN,IAAAA,IAAI,EAAEF,WAAW,CAACS,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AACxBC,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACA,SAAO;AACHV,IAAAA,IAAI,EAAEF,WAAW,CAACa;AADf,GAAP;AAGH,CALM;AAOP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,cAAc,EAAI;AAC9C,SAAO,UAAAC,QAAQ,EAAI;AACfC,IAAAA,UAAU,CAAC,YAAM;AACbD,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACH,KAFS,EAEPK,cAAc,GAAG,IAFV,CAAV;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7C,SAAO,UAAAJ,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACAF,IAAAA,KAAK,CAACsB,IAAN,CAAW,wCAAX,EAAqD;AACjDF,MAAAA,QAAQ,EAAEA,QADuC;AAEjDC,MAAAA,QAAQ,EAAEA;AAFuC,KAArD,EAICE,IAJD,CAIM,UAAAC,GAAG,EAAI;AACT,UAAMlB,IAAI,GAAG;AACTmB,QAAAA,KAAK,EAAED,GAAG,CAACE,IAAJ,CAASC,GADP;AAETP,QAAAA,QAAQ,EAARA,QAFS;AAGTQ,QAAAA,MAAM,EAAEJ,GAAG,CAACE,IAAJ,CAASpB,IAHR;AAITuB,QAAAA,cAAc,EAAE,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAK,IAArC;AAJP,OAAb;AAMAnB,MAAAA,YAAY,CAACoB,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe5B,IAAf,CAA7B;AACAW,MAAAA,QAAQ,CAACZ,WAAW,CAACC,IAAD,CAAZ,CAAR;AACAW,MAAAA,QAAQ,CAACF,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACH,KAdD,EAeCoB,KAfD,CAeO,UAAAC,GAAG,EAAI;AACVnB,MAAAA,QAAQ,CAACT,QAAQ,CAAC4B,GAAD,CAAT,CAAR;AACH,KAjBD;AAmBH,GArBD;AAsBH,CAvBM;AAyBP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CACtBjB,QADsB,EAEtBkB,KAFsB,EAGtBC,SAHsB,EAItBC,SAJsB,EAKrB;AACD,SAAO,UAAAvB,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACA,QAAMI,IAAI,GAAG;AACTc,MAAAA,QAAQ,EAARA,QADS;AAETkB,MAAAA,KAAK,EAALA,KAFS;AAGTC,MAAAA,SAAS,EAATA,SAHS;AAITC,MAAAA,SAAS,EAATA;AAJS,KAAb;AAMAxC,IAAAA,KAAK,CAACsB,IAAN,CAAW,+CAAX,EAA4DhB,IAA5D,EACCiB,IADD,CACO,UAAAC,GAAG,EAAI;AACV,UAAMlB,IAAI,GAAG;AACTmB,QAAAA,KAAK,EAAED,GAAG,CAACE,IAAJ,CAASC,GADP;AAETP,QAAAA,QAAQ,EAARA,QAFS;AAGTQ,QAAAA,MAAM,EAAEJ,GAAG,CAACE,IAAJ,CAASpB,IAHR;AAITuB,QAAAA,cAAc,EAAE,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,IAAvC;AAJP,OAAb;AAMAnB,MAAAA,YAAY,CAACoB,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe5B,IAAf,CAA7B;AACAW,MAAAA,QAAQ,CAACZ,WAAW,CAACC,IAAD,CAAZ,CAAR;AACAW,MAAAA,QAAQ,CAACF,gBAAgB,CAAC,IAAD,CAAjB,CAAR,CATU,CAWtB;AACS,KAbD,EAcCoB,KAdD,CAcQ,UAAAC,GAAG,EAAI;AACXnB,MAAAA,QAAQ,CAACT,QAAQ,CAAC4B,GAAD,CAAT,CAAR;AACH,KAhBD;AAiBH,GAzBD;AA0BH,CAhCM;AAkCP,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAChC,SAAO,UAAAxB,QAAQ,EAAI;AACf,QAAMX,IAAI,GAAG2B,IAAI,CAACS,KAAL,CAAW9B,YAAY,CAAC+B,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,QAAIrC,IAAI,KAAKsC,SAAT,IAAsBtC,IAAI,KAAK,IAAnC,EAAyC;AACrCW,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACH,KAFD,MAEO;AACH,UAAMkB,cAAc,GAAI,IAAIC,IAAJ,CAASxB,IAAI,CAACuB,cAAd,CAAxB;;AACA,UAAIA,cAAc,IAAI,IAAIC,IAAJ,EAAtB,EAAkC;AAC9Bb,QAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACH,OAFD,MAEO;AACHM,QAAAA,QAAQ,CAAEZ,WAAW,CAACC,IAAD,CAAb,CAAR;AACAW,QAAAA,QAAQ,CACJF,gBAAgB,CACZ,CAACc,cAAc,CAACE,OAAf,KAA2B,IAAID,IAAJ,GAAWC,OAAX,EAA5B,IAAoD,IADxC,CADZ,CAAR;AAKH;AACJ;AACJ,GAjBD;AAkBH,CAnBM","sourcesContent":["import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = user => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        user\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem(\"user\");\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            username: username, \n            password: password\n        })\n        .then(res => {\n            const user = {\n                token: res.data.key,\n                username,\n                userId: res.data.user,\n                expirationDate: new Date(new Date().getTime() + 3600*1000)\n            };\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            dispatch(authSuccess(user));\n            dispatch(checkAuthTimeout(3600)); \n        })\n        .catch(err => {\n            dispatch(authFail(err));\n        });\n\n    };\n};\n\nexport const authSignup = (\n    username,\n    email,\n    password1,\n    password2\n) => {\n    return dispatch => {\n        dispatch(authStart());\n        const user = {\n            username,\n            email,\n            password1,\n            password2\n        };\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', user)\n        .then( res => {\n            const user = {\n                token: res.data.key,\n                username,\n                userId: res.data.user,\n                expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n            };\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            dispatch(authSuccess(user));\n            dispatch(checkAuthTimeout(3600));\n\n//            axios.get('')\n        })\n        .catch( err => {\n            dispatch(authFail(err));\n        });\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        if( user === undefined || user === null) {\n            dispatch(logout());\n        } else {\n            const expirationDate  = new Date(user.expirationDate);\n            if( expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch( authSuccess(user) );\n                dispatch(\n                    checkAuthTimeout(\n                        (expirationDate.getTime() - new Date().getTime()) / 1000\n                    )\n                );\n            }\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}