{"ast":null,"code":"import _classCallCheck from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/logesh/cs307/PickaBook/frontend/gui/src/components/ForgotPW.js\";\nimport React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../images/logo.png';\nimport axios from 'axios';\nvar prefixIcon = {\n  color: 'rgba(0,0,0,0.8)'\n};\n\nvar ForgotPW =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ForgotPW, _React$Component);\n\n  function ForgotPW() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ForgotPW);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ForgotPW)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          axios.post('http://127.0.0.1:8000/profile/resetpw/', {\n            email: values.email\n          });\n        } //        this.props.history.push('/');\n\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ForgotPW, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"parent\",\n        style: {\n          position: 'absolute',\n          left: '50%',\n          top: '50%',\n          transform: 'translate(-50%, -50%)',\n          borderRadius: 10,\n          backgroundColor: 'rgba(241, 101, 86, 0.6)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Logo,\n        alt: \"logo\",\n        style: {\n          width: 250,\n          height: 93\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        className: \"signForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"mail\",\n          style: prefixIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }),\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" An email will be sent!\")));\n    }\n  }]);\n\n  return ForgotPW;\n}(React.Component);\n\nvar WrappedForgotPW = Form.create({\n  name: 'forgotpw'\n})(ForgotPW);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(userName, email, password1, password2) {\n      return dispatch(actions.authSignup(userName, email, password1, password2));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedForgotPW);","map":{"version":3,"sources":["/home/logesh/cs307/PickaBook/frontend/gui/src/components/ForgotPW.js"],"names":["React","Form","Input","Icon","Button","actions","connect","NavLink","Logo","axios","prefixIcon","color","ForgotPW","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","post","email","getFieldDecorator","position","left","top","transform","borderRadius","backgroundColor","width","height","rules","type","message","required","Component","WrappedForgotPW","create","name","mapStateToProps","loading","error","mapDispatchToProps","dispatch","onAuth","userName","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Form, Input, Icon, Button } from 'antd';\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../images/logo.png';\nimport axios from 'axios';\n  \nconst prefixIcon = {\n  color: 'rgba(0,0,0,0.8)'\n};\n\n  class ForgotPW extends React.Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n  \n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n            axios.post('http://127.0.0.1:8000/profile/resetpw/', {\n                email: values.email\n            });\n        }\n//        this.props.history.push('/');\n      });\n    }\n  \n  \n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n  \n      return (\n        <div className=\"parent\" style={{\n          position: 'absolute',\n          left: '50%',\n          top: '50%',\n          transform: 'translate(-50%, -50%)',\n          borderRadius: 10,\n          backgroundColor: 'rgba(241, 101, 86, 0.6)', \n          \n      }}>\n\n          <img src={Logo} alt=\"logo\" style={{\n            width: 250,\n            height: 93\n          }} />\n        <Form onSubmit={this.handleSubmit}>\n            \n          <Form.Item className='signForm'  >\n            {getFieldDecorator('email', {\n              rules: [{\n                type: 'email', message: 'The input is not valid E-mail!',\n              }, {\n                required: true, message: 'Please input your E-mail!',\n              }],\n            })(\n              <Input prefix={<Icon type=\"mail\" style={prefixIcon} />} placeholder=\"Email\" />\n            )}\n          </Form.Item>\n          <p> An email will be sent!</p>\n       </Form>\n       \n       </div>\n      );\n    }\n  }\n  \n  const WrappedForgotPW = Form.create({ name: 'forgotpw' })(ForgotPW);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (userName, email, password1, password2) => dispatch(actions.authSignup(userName, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedForgotPW);"]},"metadata":{},"sourceType":"module"}