{"ast":null,"code":"import _classCallCheck from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/logesh/cs307/PickaBook/frontend/gui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/logesh/cs307/PickaBook/frontend/gui/src/components/QAnswer.js\";\nimport React from 'react';\nimport { Drawer, Button, Form, Input, List, Icon, Comment, Avatar, Tooltip, Card, Alert, message } from 'antd';\nimport axios from 'axios';\nvar TextArea = Input.TextArea;\nvar buttonStyle = {\n  position: 'absolute',\n  right: 20,\n  background: '#DDA72F'\n};\n\nvar QAnswer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(QAnswer, _React$Component);\n\n  function QAnswer(props) {\n    var _this;\n\n    _classCallCheck(this, QAnswer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QAnswer).call(this, props));\n\n    _this.fetchData = function () {\n      var bookID = _this.props.bookID; //match.params.bookID;\n\n      axios.get(\"http://127.0.0.1:8000/qanswer/question/\".concat(bookID)).then(function (res) {\n        _this.setState({\n          questions: res.data,\n          drawVisible: false,\n          drawQuestion: false\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.componentDidMount = function () {\n      _this.fetchData();\n    };\n\n    _this.handleAnswerSubmit = function () {\n      var bookID = _this.props.bookID;\n      var qID = _this.state.qID;\n      var profID = localStorage.getItem(\"profID\");\n\n      if (!_this.state.answer) {\n        _this.setState({\n          error: true\n        });\n\n        return;\n      }\n\n      axios.post(\"http://127.0.0.1:8000/qanswer/answer/create/\", {\n        profile: profID,\n        book: bookID,\n        question: qID,\n        answer: _this.state.answer\n      }).then(function (res) {\n        console.log(res);\n\n        _this.fetchData();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.showDrawer = function (qID) {\n      _this.setState({\n        drawVisible: true,\n        qID: qID\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.closeDrawer = function () {\n      _this.setState({\n        drawVisible: false\n      });\n    };\n\n    _this.showQuestionDrawer = function () {\n      _this.setState({\n        drawQuestion: true\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.closeQuestionDrawer = function () {\n      _this.setState({\n        drawQuestion: false\n      });\n    };\n\n    _this.handleQuestionChange = function (e) {\n      _this.setState({\n        question: e.target.value\n      });\n    };\n\n    _this.handleQuestionSubmit = function () {\n      var bookID = _this.props.bookID;\n      var profID = localStorage.getItem(\"profID\");\n\n      if (!_this.state.question) {\n        _this.setState({\n          error: true\n        });\n\n        return;\n      }\n\n      axios.post(\"http://127.0.0.1:8000/qanswer/question/create/\", {\n        profile: profID,\n        book: bookID,\n        question: _this.state.question\n      }).then(function (res) {\n        console.log(res);\n\n        _this.fetchData();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleAnswerChange = function (e) {\n      _this.setState({\n        answer: e.target.value\n      });\n    };\n\n    _this.ErrorMessage = function () {\n      message.error('Please Fill The Form Before Submitting!');\n\n      _this.setState({\n        error: false\n      });\n    };\n\n    _this.like = function () {\n      _this.setState({\n        likes: 1,\n        dislikes: 0,\n        action: 'liked'\n      });\n    };\n\n    _this.dislike = function () {\n      _this.setState({\n        likes: 0,\n        dislikes: 1,\n        action: 'disliked'\n      });\n    };\n\n    _this.state = {\n      questions: [],\n      likes: 0,\n      dislikes: 0,\n      action: null,\n      img: null,\n      drawVisible: false,\n      drawQuestion: false,\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(QAnswer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          likes = _this$state.likes,\n          dislikes = _this$state.dislikes,\n          action = _this$state.action;\n      var actions = [React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Like\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"like\",\n        theme: action === 'liked' ? 'filled' : 'outlined',\n        onClick: this.like,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        style: {\n          paddingLeft: 8,\n          cursor: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, likes)), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Dislike\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"dislike\",\n        theme: action === 'disliked' ? 'filled' : 'outlined',\n        onClick: this.dislike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        style: {\n          paddingLeft: 8,\n          cursor: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, dislikes)), React.createElement(\"span\", {\n        onClick: function onClick() {\n          return _this2.showDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Reply to\")];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.state.error ? this.ErrorMessage() : React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(Drawer, {\n        title: \"Answer\",\n        placement: \"bottom\",\n        onClose: this.closeDrawer,\n        visible: this.state.drawVisible,\n        style: {\n          overflow: 'auto',\n          height: 'calc(100% - 108px)',\n          paddingBottom: '108px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Form, {\n        layout: \"vertical\",\n        hideRequiredMark: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(TextArea, {\n        onChange: this.handleAnswerChange,\n        name: \"answer\",\n        placeholder: \"Answer The Question\",\n        autosize: {\n          minRows: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          left: 0,\n          bottom: 0,\n          width: '100%',\n          borderTop: '1px solid #e9e9e9',\n          padding: '10px 16px',\n          background: '#fff',\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.closeDrawer,\n        style: {\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleAnswerSubmit,\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Drawer, {\n        title: \"Question\",\n        placement: \"bottom\",\n        onClose: this.closeQuestionDrawer,\n        visible: this.state.drawQuestion,\n        style: {\n          overflow: 'auto',\n          height: 'calc(100% - 108px)',\n          paddingBottom: '108px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Form, {\n        layout: \"vertical\",\n        hideRequiredMark: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(TextArea, {\n        onChange: this.handleQuestionChange,\n        name: \"question\",\n        placeholder: \"Ask a Question\",\n        autosize: {\n          minRows: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          left: 0,\n          bottom: 0,\n          width: '100%',\n          borderTop: '1px solid #e9e9e9',\n          padding: '10px 16px',\n          background: '#fff',\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.closeQuestionDrawer,\n        style: {\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleQuestionSubmit,\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Card, {\n        title: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \"Questions\", React.createElement(Button, {\n          type: \"primary\",\n          onClick: this.showQuestionDrawer,\n          style: buttonStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, \"New Question\")),\n        headStyle: {\n          fontSize: 20,\n          fontStyle: 'italic',\n          fontFamily: 'Georgia',\n          background: '#020037',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(List, {\n        className: \"comment-list\",\n        itemLayout: \"horizontal\",\n        dataSource: this.state.questions,\n        renderItem: function renderItem(item) {\n          return React.createElement(Comment, {\n            actions: [React.createElement(\"span\", {\n              onClick: function onClick() {\n                return _this2.showDrawer(item.pk);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 275\n              },\n              __self: this\n            }, \"Reply to\")],\n            author: React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 277\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              href: '/profile/' + item.profile.pk,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 278\n              },\n              __self: this\n            }, item.profile.first_name + \" \" + item.profile.last_name), item.profile.review_count > 10 && React.createElement(Icon, {\n              style: {\n                marginLeft: 10,\n                color: '#DAA520'\n              },\n              type: \"crown\",\n              theme: \"filled\",\n              twoToneColor: \"#DAA520\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 282\n              },\n              __self: this\n            })),\n            avatar: React.createElement(Avatar, {\n              src: item.profile.avatar,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 286\n              },\n              __self: this\n            }),\n            content: item.question,\n            datetime: item.creation_date,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }, item.answers.length > 0 ? React.createElement(List, {\n            className: \"comment-list\",\n            itemLayout: \"horizontal\",\n            dataSource: item.answers,\n            renderItem: function renderItem(answer) {\n              return React.createElement(Comment, {\n                author: React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 300\n                  },\n                  __self: this\n                }, React.createElement(\"a\", {\n                  href: '/profile/' + answer.profile.pk,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 301\n                  },\n                  __self: this\n                }, answer.profile.first_name + \" \" + answer.profile.last_name), answer.profile.review_count > 10 && React.createElement(Icon, {\n                  style: {\n                    marginLeft: 10,\n                    color: '#DAA520'\n                  },\n                  type: \"crown\",\n                  theme: \"filled\",\n                  twoToneColor: \"#DAA520\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 305\n                  },\n                  __self: this\n                })),\n                avatar: React.createElement(Avatar, {\n                  src: answer.profile.avatar,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 309\n                  },\n                  __self: this\n                }),\n                content: answer.answer,\n                datetime: answer.creation_date,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 298\n                },\n                __self: this\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          }) : React.createElement(\"b\", {\n            syle: {\n              marginLeft: 200\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316\n            },\n            __self: this\n          }, \"No replies\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return QAnswer;\n}(React.Component);\n\nexport default QAnswer;","map":{"version":3,"sources":["/home/logesh/cs307/PickaBook/frontend/gui/src/components/QAnswer.js"],"names":["React","Drawer","Button","Form","Input","List","Icon","Comment","Avatar","Tooltip","Card","Alert","message","axios","TextArea","buttonStyle","position","right","background","QAnswer","props","fetchData","bookID","get","then","res","setState","questions","data","drawVisible","drawQuestion","catch","error","console","log","componentDidMount","handleAnswerSubmit","qID","state","profID","localStorage","getItem","answer","post","profile","book","question","err","showDrawer","closeDrawer","showQuestionDrawer","closeQuestionDrawer","handleQuestionChange","e","target","value","handleQuestionSubmit","handleAnswerChange","ErrorMessage","like","likes","dislikes","action","dislike","img","actions","paddingLeft","cursor","overflow","height","paddingBottom","minRows","left","bottom","width","borderTop","padding","textAlign","marginRight","fontSize","fontStyle","fontFamily","color","item","pk","first_name","last_name","review_count","marginLeft","avatar","creation_date","answers","length","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Drawer, Button, Form, Input, List, Icon, Comment, Avatar, Tooltip, Card, Alert, message } from 'antd';\nimport axios from 'axios';\n\nconst { TextArea } = Input;\nconst buttonStyle = {\n    position: 'absolute',\n    right: 20,\n    background: '#DDA72F'\n}\n\nclass QAnswer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n            likes: 0,\n            dislikes: 0,\n            action: null,\n            img: null,\n            drawVisible: false,\n            drawQuestion: false,\n            error: false\n        };\n    }  \n\n    fetchData = () => {\n        const bookID = this.props.bookID; //match.params.bookID;\n        axios.get(`http://127.0.0.1:8000/qanswer/question/${bookID}`).then(res => {\n            this.setState({\n                questions: res.data,\n                drawVisible: false,\n                drawQuestion: false,\n            });\n        })\n        .catch(error => console.log(error));\n    }\n\n    componentDidMount = () => {\n        this.fetchData();\n    }\n\n    handleAnswerSubmit = () => {\n        const bookID = this.props.bookID;\n        const qID = this.state.qID;\n        const profID = localStorage.getItem(\"profID\");\n        if ( !this.state.answer ){\n            this.setState({error: true});\n            return\n        }\n\n        axios.post(`http://127.0.0.1:8000/qanswer/answer/create/`, {\n            profile: profID,\n            book: bookID,\n            question: qID,\n            answer: this.state.answer\n        })\n        .then(res => {\n            console.log(res)\n            this.fetchData();\n        })\n        .catch(err => console.log(err));\n    };\n\n    showDrawer = (qID) => {\n        this.setState({\n            drawVisible: true,\n            qID: qID,\n        });\n        console.log(this.state);\n    };\n\n    closeDrawer = () => {\n        this.setState({\n            drawVisible: false,\n        });\n    };\n\n    showQuestionDrawer = () => {\n        this.setState({\n            drawQuestion: true,\n        });\n        console.log(this.state);\n    };\n\n    closeQuestionDrawer = () => {\n        this.setState({\n            drawQuestion: false,\n        });\n    };\n\n    handleQuestionChange = (e) => {\n        this.setState({\n            question: e.target.value,\n        });\n    };\n\n    handleQuestionSubmit = () => {\n        const bookID = this.props.bookID;\n        const profID = localStorage.getItem(\"profID\");\n        if ( !this.state.question ){\n            this.setState({error: true});\n            return\n        }\n\n        axios.post(`http://127.0.0.1:8000/qanswer/question/create/`, {\n            profile: profID,\n            book: bookID,\n            question: this.state.question\n        })\n        .then(res => {\n            console.log(res)\n            this.fetchData();\n        }).catch(err => console.log(err));\n    }\n\n    handleAnswerChange = (e) => {\n        this.setState({\n            answer: e.target.value,\n        });\n    }\n\n    ErrorMessage = () =>  {\n        message.error('Please Fill The Form Before Submitting!');\n        this.setState({\n            error: false\n        })\n    }\n\n    like = () => {\n        this.setState({\n          likes: 1,\n          dislikes: 0,\n          action: 'liked',\n        });\n      }\n    \n      dislike = () => {\n        this.setState({\n          likes: 0,\n          dislikes: 1,\n          action: 'disliked',\n        });\n      }\n\n    render() {\n\n        const { likes, dislikes, action } = this.state;\n        const actions = [\n            <span>\n              <Tooltip title=\"Like\">\n                <Icon\n                  type=\"like\"\n                  theme={action === 'liked' ? 'filled' : 'outlined'}\n                  onClick={this.like}\n                />\n              </Tooltip>\n              <span style={{ paddingLeft: 8, cursor: 'auto' }}>\n                {likes}\n              </span>\n            </span>,\n            <span>\n              <Tooltip title=\"Dislike\">\n                <Icon\n                  type=\"dislike\"\n                  theme={action === 'disliked' ? 'filled' : 'outlined'}\n                  onClick={this.dislike}\n                />\n              </Tooltip>\n              <span style={{ paddingLeft: 8, cursor: 'auto' }}>\n                {dislikes}\n              </span>\n            </span>,\n            <span onClick={() => this.showDrawer()}>Reply to</span>,\n        ];\n\n        return (\n            <div>\n                {this.state.error ?\n                    this.ErrorMessage()\n                    :\n                    <b></b>\n                }\n                <Drawer\n                    title=\"Answer\"\n                    placement=\"bottom\"\n                    onClose={this.closeDrawer}\n                    visible={this.state.drawVisible}\n                    style={{\n                        overflow: 'auto',\n                        height: 'calc(100% - 108px)',\n                        paddingBottom: '108px',\n                    }}\n                >\n                    <Form layout=\"vertical\" hideRequiredMark>\n                        <Form.Item label=\"Answer\">\n                            <TextArea onChange={this.handleAnswerChange} name=\"answer\" placeholder=\"Answer The Question\" autosize={{minRows: 2}} />\n                        </Form.Item>\n                    </Form>\n                    <div style={{\n                            position: 'absolute',\n                            left: 0,\n                            bottom: 0,\n                            width: '100%',\n                            borderTop: '1px solid #e9e9e9',\n                            padding: '10px 16px',\n                            background: '#fff',\n                            textAlign: 'right',\n                    }}\n                    >\n                        <Button onClick={this.closeDrawer} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleAnswerSubmit} type=\"primary\">\n                            Submit\n                        </Button>\n                    </div>\n                </Drawer>\n\n                <Drawer\n                    title=\"Question\"\n                    placement=\"bottom\"\n                    onClose={this.closeQuestionDrawer}\n                    visible={this.state.drawQuestion}\n                    style={{\n                        overflow: 'auto',\n                        height: 'calc(100% - 108px)',\n                        paddingBottom: '108px',\n                    }}\n                >\n                    <Form layout=\"vertical\" hideRequiredMark>\n                        <Form.Item label=\"Question\">\n                            <TextArea onChange={this.handleQuestionChange} name=\"question\" placeholder=\"Ask a Question\" autosize={{minRows: 2}} />\n                        </Form.Item>\n                    </Form>\n                    <div style={{\n                            position: 'absolute',\n                            left: 0,\n                            bottom: 0,\n                            width: '100%',\n                            borderTop: '1px solid #e9e9e9',\n                            padding: '10px 16px',\n                            background: '#fff',\n                            textAlign: 'right',\n                    }}\n                    >\n                        <Button onClick={this.closeQuestionDrawer} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleQuestionSubmit} type=\"primary\">\n                            Submit\n                        </Button>\n                    </div>\n                </Drawer>\n\n\n                <Card title={<div>Questions\n                    <Button type=\"primary\" onClick={this.showQuestionDrawer} style={buttonStyle}>New Question</Button>\n                </div>}\n                headStyle={{\n                    fontSize: 20,\n                    fontStyle: 'italic',\n                    fontFamily: 'Georgia', \n                    background: '#020037',\n                    color: 'white'\n                }}\n                >\n                <List\n                    className=\"comment-list\"\n                    itemLayout=\"horizontal\"\n                    dataSource={this.state.questions}\n                    renderItem={item => (\n                        <Comment\n                            actions={[<span onClick={() => this.showDrawer(item.pk)}>Reply to</span>]}\n                            author={\n                                <div>\n                                    <a href={'/profile/'+item.profile.pk}>{item.profile.first_name + \" \" + item.profile.last_name}\n                                    </a>\n                                {\n                                    item.profile.review_count > 10 &&\n                                    <Icon style={{marginLeft: 10, color: '#DAA520'}} type=\"crown\" theme=\"filled\" twoToneColor=\"#DAA520\" />\n                                }\n                                </div>    \n                            }\n                            avatar={<Avatar src={item.profile.avatar}/>}\n                            content={item.question}\n                            datetime={item.creation_date}\n                        >\n                            {\n                                item.answers.length > 0 ?\n                                \n                                <List\n                                className=\"comment-list\"\n                                itemLayout=\"horizontal\"\n                                dataSource={item.answers}\n                                renderItem={answer => (\n                                    <Comment\n                                        author={\n                                            <div>\n                                                <a href={'/profile/'+answer.profile.pk}>{answer.profile.first_name + \" \" + answer.profile.last_name}\n                                                </a>\n                                            {\n                                                answer.profile.review_count > 10 &&\n                                                <Icon style={{marginLeft: 10, color: '#DAA520'}} type=\"crown\" theme=\"filled\" twoToneColor=\"#DAA520\" />\n                                            }\n                                            </div>    \n                                        }\n                                        avatar={<Avatar src={answer.profile.avatar}/>}\n                                        content={answer.answer}\n                                        datetime={answer.creation_date}\n                                    />\n                                )}\n                                />\n                                :\n                                <b syle={{marginLeft: 200}}>No replies</b>\n                            }\n                            </Comment>\n                        \n                    )}\n                />\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default QAnswer;"]},"metadata":{},"sourceType":"module"}